

// 一个数的质因数不会超过它的算术平方根
// 我们可以从 2 遍历到该数的算术平方根，然后检查是否是因子，如果是则将这个因子全部除尽且输出
// 最后需要检查这个数本身就是质数的情况，因为在上述过程中它的大小没有变，所以只要它不是 1，我们就可以输出这个质数
// 例如 n = 7，则 7 / 7 才等于 1，而我们最多才除到 根号7，所以最后 n 肯定不变

#include <iostream>
#include <cmath>
using namespace std;

int main() {
    int n;
    cin >> n;

    // 从小到大枚举，质因子不会超过其开方
    for (int i = 2; i <= sqrt(n); i ++ ) {  
        // 当 i 是质因子，不断输出 i，然后除掉 i
        while (n % i == 0) {
            cout << i << " ";
            n /= i; // 除掉质因子
        }
    } // 只要 n 本身不是质数，则循环结束后，n 一定被除到等于 1 
    
    // 如果 n 本身就是质数，则 n 不会变，输出 n 这个质数
    if (n != 1) 
        cout << n << " ";
        
    return 0;
}

